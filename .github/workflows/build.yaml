name: Models CI/CD

# Trigger only when non autogenerated conent is affected
on: 
  push: 
  workflow_dispatch:
    paths: 
    - '!artifacts/**'


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Output
      env:
        PRN: ${{github.event_path.pull_request.number}}
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Get git tag
      run: echo "HEAD_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV

    - name: Create Release
      if: env.HEAD_TAG != ''
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log('environment', process.versions);
          const fs = require('fs').promises;
          const { repo: { owner, repo }, sha } = context;
          console.log({ owner, repo, sha });
          const tag = process.env.GITHUB_REF.split('/').slice(-1)[0];
          const release = await github.repos.createRelease({
            owner, 
            repo,
            tag_name: tag,
            name: `Release ${tag}`,
            draft: false,
            prerelease: false,
            target_commitish: sha
          });

          console.log('created release', { release });
          let upload_files = [
            'openapi.yaml',
            'openapi.json'
          ]
          for (let file of upload_files) {
            await github.repos.uploadReleaseAsset({
              owner, repo,
              release_id: release.data.id,
              name: file,
              data: await fs.readFile(`./artifacts/${file}`)
            });            
          }
